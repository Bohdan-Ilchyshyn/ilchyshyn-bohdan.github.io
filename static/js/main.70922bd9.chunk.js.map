{"version":3,"sources":["services/auth.service.js","services/music.service.js","components/Home/Home.js","components/Login/Login.js","components/Album/album.js","services/user.service.js","components/UserList/UserList.js","components/Registration/registration.js","components/UserProfile/userprofile.js","components/ABProfile/profile.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","setUserName","setUserToken","data","key","localStorage","removeItem","email","password1","password2","token","setItem","getItem","this","getUserToken","get","headers","firstname","lastname","method","url","first_name","last_name","new_password1","new_password2","id","count","card","img","title","ref","className","href","src","alt","width","height","Home","props","state","albums","bands","artists","MusicService","getAlbums","pl","setState","error","message","toString","getBands","getArtists","style","marginTop","map","content","i","cover","name","photo","nick_name","React","required","value","role","Login","handleLogin","bind","onChangeUsername","onChangePassword","loading","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","resMessage","backgroundColor","top","border","color","padding","marginBottom","fontWeight","fontSize","onSubmit","c","htmlFor","type","onChange","borderColor","validations","disabled","display","Component","Album","album","params","match","getAlbum","albumId","class","description","el","UserList","UserService","getAllUsers","users","isEmail","vusername","vpassword","Registration","handleRegister","onChangeEmail","onChangePassword1","onChangePassword2","successful","registration","statusText","alert","UserProfile","onChangeFirstname","onChangeLastname","onChangePass1","onChangePass2","handleSave","handleChangePass","putUser","changePassword","getUser","user","JSON","stringify","b","Profile","t","getBand","artistId","band","album_band","concat","getArtist","artist","album_artist","App","currentUser","undefined","UserToken","UserName","getUserName","logout","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister","catch","console"],"mappings":"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","file":"static/js/main.70922bd9.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst API_URL = \"https://plservice.herokuapp.com/auth/\"\r\n\r\nclass AuthService {\r\n\r\n    login (username, password) {\r\n        return axios\r\n            .post(API_URL + \"login/\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                this.setUserName(username);\r\n                this.setUserToken(response.data.key);\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout (){\r\n        localStorage.removeItem('user_token');\r\n        localStorage.removeItem('username');\r\n    }\r\n\r\n    registration (username, email, password1, password2) {\r\n        return axios.post(API_URL + \"registration/\", {\r\n            username,\r\n            email,\r\n            password1,\r\n            password2\r\n        });\r\n    }\r\n\r\n    setUserToken(token) {\r\n        localStorage.setItem('user_token', token);\r\n    }\r\n\r\n    setUserName (username) {\r\n        localStorage.setItem('username', username);\r\n    }\r\n\r\n    getUserToken() {\r\n        return localStorage.getItem('user_token');\r\n    }\r\n\r\n    getUserName() {\r\n        return localStorage.getItem('username');\r\n    }\r\n\r\n    getUser () {\r\n        let token = this.getUserToken();\r\n        token = \"Token \" + token;\r\n        return axios.get(API_URL+\"user/\", {\r\n            headers: {'Authorization': token}\r\n        });\r\n    }\r\n\r\n    putUser (username, firstname, lastname, email) {\r\n        let token = this.getUserToken();\r\n        token = \"Token \" + token;\r\n        return axios( {\r\n            method: \"PUT\",\r\n            url: API_URL+\"user/\",\r\n            headers: {'Authorization': token},\r\n            data: {\r\n                username: username,\r\n                email: email,\r\n                first_name: firstname,\r\n                last_name: lastname\r\n            }\r\n        })\r\n    }\r\n\r\n    changePassword (password1, password2) {\r\n        let token = this.getUserToken();\r\n        token = \"Token \" + token;\r\n        return axios({\r\n            method: \"POST\",\r\n            url: API_URL+\"password/change/\",\r\n            headers: {'Authorization': token},\r\n            data: {\r\n                new_password1: password1,\r\n                new_password2: password2\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","import axios from \"axios\"\r\n\r\nconst API_URL = \"https://plservice.herokuapp.com/api/\"\r\n\r\nclass MusicService {\r\n\r\n    getAlbum(id) {\r\n        return axios.get(API_URL+\"albums/\"+id+\"/\");\r\n    }\r\n\r\n    getAlbums (count) {\r\n        if (count===0){\r\n            return axios.get(API_URL+\"albums\");\r\n        }else{\r\n            return axios.get(API_URL+\"albums/?count=\"+count);\r\n        }\r\n    }\r\n\r\n    getBand(id) {\r\n        return axios.get(API_URL+\"bands/\"+id+\"/\");\r\n    }\r\n\r\n    getBands (count) {\r\n        if (count===0){\r\n            return axios.get(API_URL+\"bands/\");\r\n        }else{\r\n            return axios.get(API_URL+\"bands/?count=\"+count);\r\n        }\r\n    }\r\n\r\n    getArtist(id) {\r\n        return axios.get(API_URL+\"artists/\"+id+\"/\");\r\n    }\r\n\r\n    getArtists () {\r\n        return axios.get(API_URL+\"artists/\");\r\n    }\r\n}\r\n\r\nexport default new MusicService();\r\n","import * as React from \"react\";\r\nimport MusicService from \"../../services/music.service\"\r\nimport \"./home.css\"\r\n\r\nfunction card(img, title, ref) {\r\n    return (\r\n        <div className=\"responsive\">\r\n            <div className=\"gallery\">\r\n                <a href={ref}>\r\n                    <img src={img} alt=\"s1\" width=\"600\" height=\"400\"/>\r\n                </a>\r\n                <div className=\"desc\">{title}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            albums: [],\r\n            bands: [],\r\n            artists: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        MusicService.getAlbums(5)\r\n            .then(response => {\r\n                    const pl = response.data;\r\n                    this.setState({\r\n                        albums: pl\r\n                    });\r\n                },\r\n                error => {\r\n                    this.setState({\r\n                        albums:\r\n                            (error.response &&\r\n                                error.response.data &&\r\n                                error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString()\r\n                    });\r\n                });\r\n        MusicService.getBands(5)\r\n            .then(response => {\r\n                    const pl = response.data;\r\n                    this.setState({\r\n                        bands: pl\r\n                    });\r\n                },\r\n                error => {\r\n                    this.setState({\r\n                        bands:\r\n                            (error.response &&\r\n                                error.response.data &&\r\n                                error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString()\r\n                    });\r\n                });\r\n\r\n        MusicService.getArtists()\r\n            .then(response => {\r\n                    const pl = response.data;\r\n                    this.setState({\r\n                        artists: pl\r\n                    });\r\n                },\r\n                error => {\r\n                    this.setState({\r\n                        artists:\r\n                            (error.response &&\r\n                                error.response.data &&\r\n                                error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString()\r\n                    });\r\n                });\r\n    }\r\n\r\n    render() {\r\n        return  (\r\n            <div>\r\n                <div className=\"row row-content\" style={{marginTop: \"50px\"}}>\r\n                    <div className=\"col-12\" >\r\n                        <div className=\"col text-center\">\r\n                            <h1>Popular albums</h1>\r\n                        </div>\r\n                        {this.state.albums.map((content, i) => <div>\r\n                        {\r\n                            card(content.cover, content.name, \"/album/\"+content.id+\"/\")\r\n                        }\r\n                        </div>)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\" >\r\n                    <div className=\"col-12\" >\r\n                        <div className=\"col text-center\">\r\n                            <h1>Popular bands</h1>\r\n                        </div>\r\n                        {this.state.bands.map((content, i) => <div>\r\n                            {\r\n                                card(content.cover, content.name, \"pr/1/\"+content.id+\"/\")\r\n                            }\r\n                        </div>)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\" >\r\n                    <div className=\"col-12\" >\r\n                        <div className=\"col text-center\">\r\n                            <h1>Popular artist</h1>\r\n                        </div>\r\n                        {this.state.artists.map((content, i) => <div>\r\n                            {\r\n                                card(content.photo, content.nick_name, \"pr/2/\"+content.id+\"/\")\r\n                            }\r\n                        </div>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./login.css\"\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../../services/auth.service\"\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin (e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            loading: true\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.login(this.state.username, this.state.password).then(\r\n                () => {\r\n                    this.props.history.push(\"/\");\r\n                    window.location.reload();\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-12 col-md-9 col-lg-6 mx-auto\">\r\n                <div className=\"card card-container\" style={{\r\n                    backgroundColor: \"#1F222E\",\r\n                    top: \"250px\",\r\n                    border: 0,\r\n                    color: \"#e2e2e2\",\r\n                    }}>\r\n                    <div className=\"card-body\" style={{padding: \"2rem\"}}>\r\n                        <h5 className=\"text-center\" style={{\r\n                            color: \"#afb1be\",\r\n                            marginBottom: \"2rem\",\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"1.5rem\",\r\n                        }}>LogIn</h5>\r\n\r\n                        <Form\r\n                            onSubmit={this.handleLogin}\r\n                            ref={c => {\r\n                                this.form = c;\r\n                            }}\r\n                        >\r\n                            <div className=\"form-signin\" style={{width: \"100%\"}}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"username\">Username</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\"}}\r\n                                        validations={[required]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChangePassword}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\"}}\r\n                                        validations={[required]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        disabled={this.state.loading}\r\n                                    >\r\n                                        {this.state.loading && (\r\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                        )}\r\n                                        <span>Login</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {this.state.message && (\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                                            {this.state.message}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={c => {\r\n                                        this.checkBtn = c;\r\n                                    }}\r\n                                />\r\n                                <hr className=\"my-4\"/>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import * as React from \"react\";\r\nimport MusicService from \"../../services/music.service\"\r\nimport \"./album.css\"\r\nclass Album extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            album: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { match: { params } } = this.props;\r\n        MusicService.getAlbum(params.albumId)\r\n            .then(response => {\r\n                    const pl = response.data;\r\n                    this.setState({\r\n                        album: pl\r\n                    });\r\n                });\r\n    }\r\n\r\n    render() {\r\n        const elements = [1, 2, 3, 4, 5,6, 7, 8, 9];\r\n        return (\r\n        <div className=\"alb\">\r\n            <div class=\"row row-content\" style={{marginTop: \"50px\"}}>\r\n                <div className=\"col-12\">\r\n                <div class=\"card mb-3 album\" style={{backgroundColor: \"#1F222E\", color: \"#e2e2e2\"}}>\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"col-md-4\">\r\n                            <img src={this.state.album.cover} className=\"card-img\" alt=\"...\"/>\r\n                        </div>\r\n                        <div class=\"col-md-8\">\r\n                            <div class=\"card-body\">\r\n                                <h1 class=\"card-title\">{this.state.album.name}</h1>\r\n                                <p class=\"card-text\">{this.state.album.description}</p>\r\n                                <a href=\"#\" class=\"btn btn-primary btn-album\">Add to library</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row row-content\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"list-group\" >\r\n                        {elements.map((el) =>\r\n                            <a href=\"#\" className=\"list-group-item list-group-item-action music-list\"\r\n                               style={{backgroundColor: \"#1F222E\", color: \"#e2e2e2\"}}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-1\">\r\n                                        <img src={this.state.album.cover} alt=\"p\" height=\"40\" width=\"40\"/>\r\n                                    </div>\r\n                                    <div className=\"col-9 ml-2\">\r\n                                        <h3>Music {el}</h3>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>\r\n    )}\r\n}\r\n\r\nexport default Album;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"https://plservice.herokuapp.com/\"\r\n\r\n\r\nclass UserService {\r\n    getAllUsers () {\r\n        return axios.get(API_URL+\"users/\");\r\n            // .then(function (response) {\r\n            //     return JSON.stringify(response);\r\n            // })\r\n    }\r\n\r\n    getUser (username){\r\n        return axios.get(API_URL+\"users/\"+username);\r\n    }\r\n}\r\n\r\nexport default new UserService();\r\n","import React from \"react\";\r\nimport UserService from \"../../services/user.service\"\r\n\r\nclass UserList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            content: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserService.getAllUsers()\r\n            .then(response => {\r\n                    const users = response.data;\r\n                    this.setState({\r\n                        content: users\r\n                    });\r\n                },\r\n                error => {\r\n                    this.setState({\r\n                        content:\r\n                            (error.response &&\r\n                                error.response.data &&\r\n                                error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString()\r\n                    });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row align-content-center\">\r\n                <div className=\"col-12\" style={{top: \"50px\"}}>\r\n                    <h1 className=\"text-center\">Users List</h1>\r\n                    <ul className=\"list-group\">\r\n                        {this.state.content.map((content, i) => <li key={i}>\r\n                            username: {content.username}\r\n                            <br/>\r\n                            email: {content.email}\r\n                            <br/>\r\n                            first name: {content.first_name}\r\n                            <br/>\r\n                            last name: {content.last_name}\r\n                        </li>)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport AuthService from \"../../services/auth.service\"\r\n\r\nimport { isEmail } from \"validator\"\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport \"./registration.css\"\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass Registration extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword1 = this.onChangePassword1.bind(this);\r\n        this.onChangePassword2 = this.onChangePassword2.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password1: \"\",\r\n            password2: \"\",\r\n            successful: false,\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    };\r\n\r\n    onChangePassword1(e) {\r\n        this.setState({\r\n            password1: e.target.value\r\n        });\r\n    };\r\n\r\n    onChangePassword2(e) {\r\n        this.setState({\r\n            password2: e.target.value\r\n        });\r\n    };\r\n\r\n    handleRegister(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.registration(\r\n                this.state.username,\r\n                this.state.email,\r\n                this.state.password1,\r\n                this.state.password2\r\n            )\r\n                .then(\r\n                response => {\r\n                    this.setState({\r\n                        message: response.statusText,\r\n                        successful: true\r\n                    });\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        successful: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-12 col-md-9 col-lg-6 mx-auto\">\r\n                <div className=\"card\" style={{\r\n                        backgroundColor: \"#1F222E\",\r\n                        top: \"250px\",\r\n                        border: 0,\r\n                        color: \"#e2e2e2\",\r\n                    }}>\r\n                    <div className=\"card-body\" style={{padding: \"2rem\"}}>\r\n                        <h5 className=\"text-center\" style={{\r\n                            color: \"#afb1be\",\r\n                            marginBottom: \"2rem\",\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"1.5rem\",\r\n                        }}>SingUp</h5>\r\n\r\n                        <Form onSubmit={this.handleRegister}\r\n                              ref={c=>{\r\n                                  this.form = c;\r\n                              }}\r\n                        >\r\n\r\n                            {!this.state.successful && (\r\n                                <div className=\"form-signin\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"username\">Username</label>\r\n                                        <Input type=\"text\"\r\n                                               className=\"form-control\"\r\n                                               name=\"username\"\r\n                                               value={this.state.username}\r\n                                               onChange={this.onChangeUsername}\r\n                                               style={{backgroundColor: \"#afb1be\",\r\n                                                        borderColor: \"#1F222E\"}}\r\n                                               validations={[required, vusername]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            value={this.state.email}\r\n                                            onChange={this.onChangeEmail}\r\n                                            style={{backgroundColor: \"#afb1be\",\r\n                                                borderColor: \"#1F222E\"}}\r\n                                            validations={[required, email]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password1\">Password1</label>\r\n                                        <Input\r\n                                            type=\"password1\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password1\"\r\n                                            value={this.state.password1}\r\n                                            onChange={this.onChangePassword1}\r\n                                            style={{backgroundColor: \"#afb1be\",\r\n                                                borderColor: \"#1F222E\"}}\r\n                                            validations={[required, vpassword]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password2\">Password2</label>\r\n                                        <Input\r\n                                            type=\"password2\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password2\"\r\n                                            value={this.state.password2}\r\n                                            onChange={this.onChangePassword2}\r\n                                            style={{backgroundColor: \"#afb1be\",\r\n                                                borderColor: \"#1F222E\"}}\r\n                                            validations={[required, vpassword]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {this.state.message && (\r\n                                alert(this.state.message),\r\n                                <div className=\"form-group\">\r\n                                    <h7 className=\"text-center\" style={{\r\n                                        color: \"#afb1be\",\r\n                                        marginBottom: \"2rem\",\r\n                                        fontWeight: \"bold\",\r\n                                        fontSize: \"1.5rem\",\r\n                                    }}>Account created. Please login to use service.</h7>\r\n                                </div>\r\n                            )}\r\n\r\n                            <CheckButton style={{display: \"none\"}}\r\n                                         ref={c => {\r\n                                             this.checkBtn = c;\r\n                                         }}\r\n                            />\r\n\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Registration;\r\n","import  React from \"react\";\r\nimport AuthService from \"../../services/auth.service\"\r\nimport Input from \"react-validation/build/input\";\r\nimport Form from \"react-validation/build/form\";\r\nimport \"./userprofile.css\"\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass UserProfile extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n        this.onChangeLastname = this.onChangeLastname.bind(this);\r\n        this.onChangePass1 = this.onChangePass1.bind(this);\r\n        this.onChangePass2 = this.onChangePass2.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleChangePass = this.handleChangePass.bind(this);\r\n        this.state = {\r\n            username: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            password1: \"\",\r\n            password2: \"\"\r\n        }\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeFirstname(e) {\r\n        this.setState({\r\n            firstname: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeLastname(e) {\r\n        this.setState({\r\n            lastname: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePass1 (e) {\r\n        this.setState({\r\n            password1: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePass2 (e) {\r\n        this.setState({\r\n            password2: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSave (e){\r\n        e.preventDefault();\r\n        AuthService.putUser(\r\n            this.state.username,\r\n            this.state.firstname,\r\n            this.state.lastname,\r\n            this.state.email,\r\n        ).then(response => {\r\n            AuthService.setUserName(this.state.username);\r\n            window.location.reload();\r\n        })\r\n    }\r\n\r\n    handleChangePass (e) {\r\n        AuthService.changePassword(\r\n            this.state.password1,\r\n            this.state.password2\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        AuthService.getUser()\r\n            .then(\r\n                response => {\r\n                    const user = response.data;\r\n                    this.setState({\r\n                        username: user.username,\r\n                        firstname: user.first_name,\r\n                        lastname: user.last_name,\r\n                        email: user.email\r\n                    });\r\n                    },\r\n                error => {\r\n                    alert(JSON.stringify(error.response))\r\n                })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"row justify-content-center\" >\r\n                <div className=\"col-sm-12 col-md-9 col-lg-8\" style={{top: \"100px\"}}>\r\n\r\n                    <div className=\"panel panel-default\">\r\n                        <div className=\"panel-body text-center\">\r\n                            <img src=\"https://bootdey.com/img/Content/avatar/avatar6.png\"\r\n                                 className=\"img-circle profile-avatar\" alt=\"User avatar\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Form\r\n                        onSubmit={this.handleSave}\r\n                        ref={c=>{\r\n                            this.form = c;\r\n                        }}>\r\n                        <div className=\"panel panel-default\">\r\n                            <div className=\"panel-heading\">\r\n                                <h2 className=\"panel-title\">User info</h2>\r\n                            </div>\r\n\r\n                            <div className=\"panel-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nickname</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                                borderColor: \"#1F222E\",\r\n                                                color: \"#1f222e\"}}\r\n                                        validations={[required]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>First name</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        value={this.state.firstname}\r\n                                        onChange={this.onChangeFirstname}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\",\r\n                                            color: \"#1f222e\"}}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Last name</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        value={this.state.lastname}\r\n                                        onChange={this.onChangeLastname}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\",\r\n                                            color: \"#1f222e\"}}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group custom-btn\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        disabled={this.state.loading}\r\n                                    >\r\n                                        {this.state.loading && (\r\n                                            <span className=\"spinner-border spinner-border-sm\"/>\r\n                                        )}\r\n                                        <span>Save</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={c => {\r\n                                        this.checkBtn = c;\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n\r\n                    <Form\r\n                        onSubmit={this.handleChangePass}\r\n                        ref={b=>{\r\n                            this.form = b;\r\n                        }}>\r\n                        <div className=\"panel panel-default\">\r\n                            <div className=\"panel-heading\">\r\n                                <h2 className=\"panel-title\">Security</h2>\r\n                            </div>\r\n\r\n                            <div className=\"panel-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label>New password</label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password1\"\r\n                                        // value={this.state.username}\r\n                                        onChange={this.onChangePass1}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\",\r\n                                            color: \"#1f222e\"}}\r\n                                        validations={[required]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Repeat password</label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"newpassword\"\r\n                                        // value={this.state.username}\r\n                                        onChange={this.onChangePass2}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\",\r\n                                            color: \"#1f222e\"}}\r\n                                        validations={[required]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group custom-btn\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                    >\r\n                                        {this.state.loading && (\r\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                        )}\r\n                                        <span>Change password</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={b => {\r\n                                        this.checkBtn = b;\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfile;\r\n","import * as React from \"react\";\r\nimport MusicService from \"../../services/music.service\";\r\n\r\n\r\nfunction card(img, title, ref) {\r\n    return (\r\n        <div className=\"responsive\">\r\n            <div className=\"gallery\">\r\n                <a href={ref}>\r\n                    <img src={img} alt=\"s1\" width=\"600\" height=\"400\"/>\r\n                </a>\r\n                <div className=\"desc\">{title}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass Profile extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            history: \"\",\r\n            albums: [],\r\n            content: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { match: { params } } = this.props;\r\n        if (params.t==='1'){\r\n            MusicService.getBand(params.artistId)\r\n\r\n                .then(response => {\r\n                    const band = response.data;\r\n                    this.setState({\r\n                        cover: band.cover,\r\n                        name: band.name,\r\n                        albums: band.album_band\r\n                    });\r\n                    for (let i=0; i < this.state.albums.length;i++){\r\n                        MusicService.getAlbum(this.state.albums[i])\r\n                            .then(response => {\r\n                                this.setState( {\r\n                                    content: this.state.content.concat([response.data])\r\n                                })\r\n                            })\r\n                    }\r\n\r\n                });\r\n        }else{\r\n            MusicService.getArtist(params.artistId)\r\n                .then(response => {\r\n                    const artist = response.data;\r\n                    this.setState({\r\n                        cover: artist.photo,\r\n                        name: artist.nick_name,\r\n                        albums: artist.album_artist,\r\n                        history: artist.history\r\n                    });\r\n                    for (let i=0; i < this.state.albums.length;i++){\r\n                        MusicService.getAlbum(this.state.albums[i])\r\n                            .then(response => {\r\n                                this.setState( {\r\n                                    content: this.state.content.concat([response.data])\r\n                                })\r\n                            })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"alb\">\r\n                <div class=\"row row-content\" style={{marginTop: \"50px\"}}>\r\n                    <div className=\"col-12\">\r\n                        <div class=\"card mb-3 album\" style={{backgroundColor: \"#1F222E\", color: \"#e2e2e2\"}}>\r\n                            <div class=\"row no-gutters\">\r\n                                <div class=\"col-md-4\">\r\n                                    <img src={this.state.cover} className=\"card-img\" alt=\"...\"/>\r\n                                </div>\r\n                                <div class=\"col-md-8\">\r\n                                    <div class=\"card-body\">\r\n                                        <h1 class=\"card-title\">{this.state.name}</h1>\r\n                                        <p class=\"card-text\">{this.state.history}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\" >\r\n                        <div className=\"col text-center\">\r\n                            <h1>Albums</h1>\r\n                        </div>\r\n                        {this.state.content.map((content, i) => <div>\r\n                            {\r\n                                card(content.cover, content.name, \"/album/\"+content.id+\"/\")\r\n                            }\r\n                        </div>)}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        )}\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AuthService from \"./services/auth.service\"\r\nimport {Route, Switch, BrowserRouter, Link} from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Login from \"./components/Login/Login\"\r\nimport Album from \"./components/Album/album\"\r\nimport UserList from \"./components/UserList/UserList\"\r\nimport Registration from \"./components/Registration/registration\"\r\nimport UserProfile from \"./components/UserProfile/userprofile\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Profile from \"./components/ABProfile/profile\";\r\n\r\nclass App extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const UserToken = AuthService.getUserToken();\r\n        const UserName = AuthService.getUserName();\r\n        if (UserToken) {\r\n            this.setState({\r\n                UserToken: UserToken,\r\n                UserName: UserName\r\n            });\r\n        }\r\n    }\r\n\r\n    logout () {\r\n        AuthService.logout();\r\n    }\r\n\r\n    render() {\r\n        const {UserToken, UserName} = this.state;\r\n        return (\r\n\r\n            <BrowserRouter>\r\n                <div>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark fixed-top\">\r\n                        <div className=\"navbar-brand logo\">\r\n                            <Link to=\"/home\">\r\n                                Music Service\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggler\"\r\n                                aria-controls=\"navbarToggler\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"/>\r\n                        </button>\r\n\r\n                        <div className=\"collapse navbar-collapse custom-link\" id=\"navbarToggler\">\r\n                            {UserToken && (\r\n                                <ul className=\"nav navbar-nav navbar-center\">\r\n                                    <li className=\"nav-item text-center\">\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <Link to=\"/home\">\r\n                                                Main\r\n                                            </Link>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"nav-item text-center\">\r\n                                        {/*<a className=\"nav-link text-center\" href=\"./playlists.html\">Library</a>*/}\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <Link to=\"/userlist\">UserList</Link>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            )}\r\n\r\n                            {UserToken ? (\r\n                                <ul className=\"nav navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item text-center\">\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <Link to=\"/profile\">\r\n                                                {UserName}\r\n                                            </Link>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"nav-item text-center\">\r\n                                        {/*<a className=\"nav-link text-center\" href=\"./playlists.html\">Library</a>*/}\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <a href=\"/home\" onClick={this.logout}>Logout</a>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            ):(\r\n                                <ul className=\"nav navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item text-center\">\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <Link to=\"/login\">\r\n                                                SingIn\r\n                                            </Link>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"nav-item text-center\">\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <Link to=\"/registration\">SingUp</Link>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            )}\r\n                        </div>\r\n                    </nav>\r\n                    <div className=\"container-xl \">\r\n                            <Switch>\r\n                                <Route exact path=\"/login\" component={Login}/>\r\n                                <Route exact path=\"/registration\" component={Registration}/>\r\n                                <Route exact path=\"/home\" component={Home}/>\r\n                                <Route exact path=\"/userlist\" component={UserList}/>\r\n                                <Route exact path=\"/profile\" component={UserProfile}/>\r\n                                <Route exact path=\"/album/:albumId\" component={Album}/>\r\n                                <Route exact path=\"/pr/:t/:artistId\" component={Profile}/>\r\n                            </Switch>\r\n                    </div>\r\n\r\n                </div>\r\n                {/*<footer className=\"footer\">*/}\r\n                {/*    <div className=\"container\">*/}\r\n                {/*        <div className=\"row justify-content-center \">*/}\r\n                {/*            <p className=\"footer-des\">© Copyright 2020 Ilchyshyn Bohdan</p>*/}\r\n                {/*        </div>*/}\r\n                {/*    </div>*/}\r\n                {/*</footer>*/}\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}