{"version":3,"sources":["services/auth.service.js","components/Home/Home.js","components/Login/Login.js","services/user.service.js","components/UserList/UserList.js","components/Registration/registration.js","components/UserProfile/userprofile.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","setUserName","setUserToken","data","key","localStorage","removeItem","email","password1","password2","token","setItem","getItem","this","getUserToken","get","headers","firstname","lastname","method","url","first_name","last_name","new_password1","new_password2","Home","React","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","style","backgroundColor","top","border","color","padding","marginBottom","fontWeight","fontSize","onSubmit","ref","c","width","htmlFor","type","name","onChange","borderColor","validations","disabled","display","Component","UserList","content","UserService","getAllUsers","users","map","i","isEmail","vusername","vpassword","Registration","handleRegister","onChangeEmail","onChangePassword1","onChangePassword2","successful","registration","statusText","alert","UserProfile","onChangeFirstname","onChangeLastname","onChangePass1","onChangePass2","handleSave","handleChangePass","putUser","changePassword","getUser","user","JSON","stringify","src","alt","b","App","currentUser","undefined","UserToken","UserName","getUserName","logout","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","onClick","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister","catch","console"],"mappings":"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","file":"static/js/main.b47e6e33.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst API_URL = \"https://plservice.herokuapp.com/auth/\"\r\n\r\nclass AuthService {\r\n\r\n    login (username, password) {\r\n        return axios\r\n            .post(API_URL + \"login/\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                this.setUserName(username);\r\n                this.setUserToken(response.data.key);\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout (){\r\n        localStorage.removeItem('user_token');\r\n        localStorage.removeItem('username');\r\n    }\r\n\r\n    registration (username, email, password1, password2) {\r\n        return axios.post(API_URL + \"registration/\", {\r\n            username,\r\n            email,\r\n            password1,\r\n            password2\r\n        });\r\n    }\r\n\r\n    setUserToken(token) {\r\n        localStorage.setItem('user_token', token);\r\n    }\r\n\r\n    setUserName (username) {\r\n        localStorage.setItem('username', username);\r\n    }\r\n\r\n    getUserToken() {\r\n        return localStorage.getItem('user_token');\r\n    }\r\n\r\n    getUserName() {\r\n        return localStorage.getItem('username');\r\n    }\r\n\r\n    getUser () {\r\n        let token = this.getUserToken();\r\n        token = \"Token \" + token;\r\n        return axios.get(API_URL+\"user/\", {\r\n            headers: {'Authorization': token}\r\n        });\r\n    }\r\n\r\n    putUser (username, firstname, lastname, email) {\r\n        let token = this.getUserToken();\r\n        token = \"Token \" + token;\r\n        return axios( {\r\n            method: \"PUT\",\r\n            url: API_URL+\"user/\",\r\n            headers: {'Authorization': token},\r\n            data: {\r\n                username: username,\r\n                email: email,\r\n                first_name: firstname,\r\n                last_name: lastname\r\n            }\r\n        })\r\n    }\r\n\r\n    changePassword (password1, password2) {\r\n        let token = this.getUserToken();\r\n        token = \"Token \" + token;\r\n        return axios({\r\n            method: \"POST\",\r\n            url: API_URL+\"password/change/\",\r\n            headers: {'Authorization': token},\r\n            data: {\r\n                new_password1: password1,\r\n                new_password2: password2\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","import * as React from \"react\";\r\n\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return  (\r\n            <h1>Hello from home page</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./login.css\"\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../../services/auth.service\"\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin (e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            loading: true\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.login(this.state.username, this.state.password).then(\r\n                () => {\r\n                    this.props.history.push(\"/\");\r\n                    window.location.reload();\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-12 col-md-9 col-lg-6 mx-auto\">\r\n                <div className=\"card card-container\" style={{\r\n                    backgroundColor: \"#1F222E\",\r\n                    top: \"250px\",\r\n                    border: 0,\r\n                    color: \"#e2e2e2\",\r\n                    }}>\r\n                    <div className=\"card-body\" style={{padding: \"2rem\"}}>\r\n                        <h5 className=\"text-center\" style={{\r\n                            color: \"#afb1be\",\r\n                            marginBottom: \"2rem\",\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"1.5rem\",\r\n                        }}>LogIn</h5>\r\n\r\n                        <Form\r\n                            onSubmit={this.handleLogin}\r\n                            ref={c => {\r\n                                this.form = c;\r\n                            }}\r\n                        >\r\n                            <div className=\"form-signin\" style={{width: \"100%\"}}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"username\">Username</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\"}}\r\n                                        validations={[required]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChangePassword}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\"}}\r\n                                        validations={[required]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        disabled={this.state.loading}\r\n                                    >\r\n                                        {this.state.loading && (\r\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                        )}\r\n                                        <span>Login</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {this.state.message && (\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                                            {this.state.message}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={c => {\r\n                                        this.checkBtn = c;\r\n                                    }}\r\n                                />\r\n                                <hr className=\"my-4\"/>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"https://plservice.herokuapp.com/\"\r\n\r\n\r\nclass UserService {\r\n    getAllUsers () {\r\n        return axios.get(API_URL+\"users/\");\r\n            // .then(function (response) {\r\n            //     return JSON.stringify(response);\r\n            // })\r\n    }\r\n\r\n    getUser (username){\r\n        return axios.get(API_URL+\"users/\"+username);\r\n    }\r\n}\r\n\r\nexport default new UserService();\r\n","import React from \"react\";\r\nimport UserService from \"../../services/user.service\"\r\n\r\nclass UserList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            content: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserService.getAllUsers()\r\n            .then(response => {\r\n                    const users = response.data;\r\n                    this.setState({\r\n                        content: users\r\n                    });\r\n                },\r\n                error => {\r\n                    this.setState({\r\n                        content:\r\n                            (error.response &&\r\n                                error.response.data &&\r\n                                error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString()\r\n                    });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row align-content-center\">\r\n                <div className=\"col-12\" style={{top: \"50px\"}}>\r\n                    <h1 className=\"text-center\">Users List</h1>\r\n                    <ul className=\"list-group\">\r\n                        {this.state.content.map((content, i) => <li key={i}>\r\n                            username: {content.username}\r\n                            <br/>\r\n                            email: {content.email}\r\n                            <br/>\r\n                            first name: {content.first_name}\r\n                            <br/>\r\n                            last name: {content.last_name}\r\n                        </li>)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport AuthService from \"../../services/auth.service\"\r\n\r\nimport { isEmail } from \"validator\"\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport \"./registration.css\"\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass Registration extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword1 = this.onChangePassword1.bind(this);\r\n        this.onChangePassword2 = this.onChangePassword2.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password1: \"\",\r\n            password2: \"\",\r\n            successful: false,\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    };\r\n\r\n    onChangePassword1(e) {\r\n        this.setState({\r\n            password1: e.target.value\r\n        });\r\n    };\r\n\r\n    onChangePassword2(e) {\r\n        this.setState({\r\n            password2: e.target.value\r\n        });\r\n    };\r\n\r\n    handleRegister(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.registration(\r\n                this.state.username,\r\n                this.state.email,\r\n                this.state.password1,\r\n                this.state.password2\r\n            )\r\n                .then(\r\n                response => {\r\n                    this.setState({\r\n                        message: response.statusText,\r\n                        successful: true\r\n                    });\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        successful: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-12 col-md-9 col-lg-6 mx-auto\">\r\n                <div className=\"card\" style={{\r\n                        backgroundColor: \"#1F222E\",\r\n                        top: \"250px\",\r\n                        border: 0,\r\n                        color: \"#e2e2e2\",\r\n                    }}>\r\n                    <div className=\"card-body\" style={{padding: \"2rem\"}}>\r\n                        <h5 className=\"text-center\" style={{\r\n                            color: \"#afb1be\",\r\n                            marginBottom: \"2rem\",\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"1.5rem\",\r\n                        }}>SingUp</h5>\r\n\r\n                        <Form onSubmit={this.handleRegister}\r\n                              ref={c=>{\r\n                                  this.form = c;\r\n                              }}\r\n                        >\r\n\r\n                            {!this.state.successful && (\r\n                                <div className=\"form-signin\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"username\">Username</label>\r\n                                        <Input type=\"text\"\r\n                                               className=\"form-control\"\r\n                                               name=\"username\"\r\n                                               value={this.state.username}\r\n                                               onChange={this.onChangeUsername}\r\n                                               style={{backgroundColor: \"#afb1be\",\r\n                                                        borderColor: \"#1F222E\"}}\r\n                                               validations={[required, vusername]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            value={this.state.email}\r\n                                            onChange={this.onChangeEmail}\r\n                                            style={{backgroundColor: \"#afb1be\",\r\n                                                borderColor: \"#1F222E\"}}\r\n                                            validations={[required, email]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password1\">Password1</label>\r\n                                        <Input\r\n                                            type=\"password1\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password1\"\r\n                                            value={this.state.password1}\r\n                                            onChange={this.onChangePassword1}\r\n                                            style={{backgroundColor: \"#afb1be\",\r\n                                                borderColor: \"#1F222E\"}}\r\n                                            validations={[required, vpassword]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password2\">Password2</label>\r\n                                        <Input\r\n                                            type=\"password2\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password2\"\r\n                                            value={this.state.password2}\r\n                                            onChange={this.onChangePassword2}\r\n                                            style={{backgroundColor: \"#afb1be\",\r\n                                                borderColor: \"#1F222E\"}}\r\n                                            validations={[required, vpassword]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {this.state.message && (\r\n                                alert(this.state.message),\r\n                                <div className=\"form-group\">\r\n                                    <h7 className=\"text-center\" style={{\r\n                                        color: \"#afb1be\",\r\n                                        marginBottom: \"2rem\",\r\n                                        fontWeight: \"bold\",\r\n                                        fontSize: \"1.5rem\",\r\n                                    }}>Account created. Please login to use service.</h7>\r\n                                </div>\r\n                            )}\r\n\r\n                            <CheckButton style={{display: \"none\"}}\r\n                                         ref={c => {\r\n                                             this.checkBtn = c;\r\n                                         }}\r\n                            />\r\n\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Registration;\r\n","import  React from \"react\";\r\nimport AuthService from \"../../services/auth.service\"\r\nimport Input from \"react-validation/build/input\";\r\nimport Form from \"react-validation/build/form\";\r\nimport \"./userprofile.css\"\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass UserProfile extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n        this.onChangeLastname = this.onChangeLastname.bind(this);\r\n        this.onChangePass1 = this.onChangePass1.bind(this);\r\n        this.onChangePass2 = this.onChangePass2.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleChangePass = this.handleChangePass.bind(this);\r\n        this.state = {\r\n            username: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            password1: \"\",\r\n            password2: \"\"\r\n        }\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeFirstname(e) {\r\n        this.setState({\r\n            firstname: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeLastname(e) {\r\n        this.setState({\r\n            lastname: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePass1 (e) {\r\n        this.setState({\r\n            password1: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePass2 (e) {\r\n        this.setState({\r\n            password2: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSave (e){\r\n        e.preventDefault();\r\n        AuthService.putUser(\r\n            this.state.username,\r\n            this.state.firstname,\r\n            this.state.lastname,\r\n            this.state.email,\r\n        ).then(response => {\r\n            AuthService.setUserName(this.state.username);\r\n            window.location.reload();\r\n        })\r\n    }\r\n\r\n    handleChangePass (e) {\r\n        AuthService.changePassword(\r\n            this.state.password1,\r\n            this.state.password2\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        AuthService.getUser()\r\n            .then(\r\n                response => {\r\n                    const user = response.data;\r\n                    this.setState({\r\n                        username: user.username,\r\n                        firstname: user.first_name,\r\n                        lastname: user.last_name,\r\n                        email: user.email\r\n                    });\r\n                    },\r\n                error => {\r\n                    alert(JSON.stringify(error.response))\r\n                })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"row justify-content-center\" >\r\n                <div className=\"col-sm-12 col-md-9 col-lg-8\" style={{top: \"100px\"}}>\r\n\r\n                    <div className=\"panel panel-default\">\r\n                        <div className=\"panel-body text-center\">\r\n                            <img src=\"https://bootdey.com/img/Content/avatar/avatar6.png\"\r\n                                 className=\"img-circle profile-avatar\" alt=\"User avatar\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Form\r\n                        onSubmit={this.handleSave}\r\n                        ref={c=>{\r\n                            this.form = c;\r\n                        }}>\r\n                        <div className=\"panel panel-default\">\r\n                            <div className=\"panel-heading\">\r\n                                <h2 className=\"panel-title\">User info</h2>\r\n                            </div>\r\n\r\n                            <div className=\"panel-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nickname</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                                borderColor: \"#1F222E\",\r\n                                                color: \"#1f222e\"}}\r\n                                        validations={[required]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>First name</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        value={this.state.firstname}\r\n                                        onChange={this.onChangeFirstname}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\",\r\n                                            color: \"#1f222e\"}}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Last name</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        value={this.state.lastname}\r\n                                        onChange={this.onChangeLastname}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\",\r\n                                            color: \"#1f222e\"}}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group custom-btn\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        disabled={this.state.loading}\r\n                                    >\r\n                                        {this.state.loading && (\r\n                                            <span className=\"spinner-border spinner-border-sm\"/>\r\n                                        )}\r\n                                        <span>Save</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={c => {\r\n                                        this.checkBtn = c;\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n\r\n                    <Form\r\n                        onSubmit={this.handleChangePass}\r\n                        ref={b=>{\r\n                            this.form = b;\r\n                        }}>\r\n                        <div className=\"panel panel-default\">\r\n                            <div className=\"panel-heading\">\r\n                                <h2 className=\"panel-title\">Security</h2>\r\n                            </div>\r\n\r\n                            <div className=\"panel-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label>New password</label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password1\"\r\n                                        // value={this.state.username}\r\n                                        onChange={this.onChangePass1}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\",\r\n                                            color: \"#1f222e\"}}\r\n                                        validations={[required]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Repeat password</label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"newpassword\"\r\n                                        // value={this.state.username}\r\n                                        onChange={this.onChangePass2}\r\n                                        style={{backgroundColor: \"#afb1be\",\r\n                                            borderColor: \"#1F222E\",\r\n                                            color: \"#1f222e\"}}\r\n                                        validations={[required]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group custom-btn\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                    >\r\n                                        {this.state.loading && (\r\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                        )}\r\n                                        <span>Change password</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={b => {\r\n                                        this.checkBtn = b;\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AuthService from \"./services/auth.service\"\r\nimport {Route, Switch, BrowserRouter, Link} from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Login from \"./components/Login/Login\"\r\nimport UserList from \"./components/UserList/UserList\"\r\nimport Registration from \"./components/Registration/registration\"\r\nimport UserProfile from \"./components/UserProfile/userprofile\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass App extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const UserToken = AuthService.getUserToken();\r\n        const UserName = AuthService.getUserName();\r\n        if (UserToken) {\r\n            this.setState({\r\n                UserToken: UserToken,\r\n                UserName: UserName\r\n            });\r\n        }\r\n    }\r\n\r\n    logout () {\r\n        AuthService.logout();\r\n    }\r\n\r\n    render() {\r\n        const {UserToken, UserName} = this.state;\r\n        return (\r\n\r\n            <BrowserRouter>\r\n                <div>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark fixed-top\">\r\n                        <div className=\"navbar-brand logo\">\r\n                            <Link to=\"/\">\r\n                                Music Service\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggler\"\r\n                                aria-controls=\"navbarToggler\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"/>\r\n                        </button>\r\n\r\n                        <div className=\"collapse navbar-collapse custom-link\" id=\"navbarToggler\">\r\n                            {UserToken && (\r\n                                <ul className=\"nav navbar-nav navbar-center\">\r\n                                    <li className=\"nav-item text-center\">\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <Link to=\"/\">\r\n                                                Main\r\n                                            </Link>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"nav-item text-center\">\r\n                                        {/*<a className=\"nav-link text-center\" href=\"./playlists.html\">Library</a>*/}\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <Link to=\"/userlist\">UserList</Link>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            )}\r\n\r\n                            {UserToken ? (\r\n                                <ul className=\"nav navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item text-center\">\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <Link to=\"/profile\">\r\n                                                {UserName}\r\n                                            </Link>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"nav-item text-center\">\r\n                                        {/*<a className=\"nav-link text-center\" href=\"./playlists.html\">Library</a>*/}\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <a href=\"/\" onClick={this.logout}>Logout</a>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            ):(\r\n                                <ul className=\"nav navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item text-center\">\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <Link to=\"/login\">\r\n                                                SingIn\r\n                                            </Link>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"nav-item text-center\">\r\n                                        <div className=\"nav-link text-center\">\r\n                                            <Link to=\"/registration\">SingUp</Link>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            )}\r\n                        </div>\r\n                    </nav>\r\n                    <div className=\"container-xl \">\r\n                            <Switch>\r\n                                <Route exact path=\"/login\" component={Login}/>\r\n                                <Route exact path=\"/registration\" component={Registration}/>\r\n                                <Route exact path={[\"/\", \"/home\"]} component={Home}/>\r\n                                <Route exact path=\"/userlist\" component={UserList}/>\r\n                                <Route exact path=\"/profile\" component={UserProfile}></Route>\r\n                            </Switch>\r\n                    </div>\r\n\r\n                </div>\r\n                {/*<footer className=\"footer\">*/}\r\n                {/*    <div className=\"container\">*/}\r\n                {/*        <div className=\"row justify-content-center \">*/}\r\n                {/*            <p className=\"footer-des\">© Copyright 2020 Ilchyshyn Bohdan</p>*/}\r\n                {/*        </div>*/}\r\n                {/*    </div>*/}\r\n                {/*</footer>*/}\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}